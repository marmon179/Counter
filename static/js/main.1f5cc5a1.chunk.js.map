{"version":3,"sources":["Components/Counter/Counter.module.css","Components/Scoreboard/Scoreboard.module.css","Components/Input/Input.tsx","Components/Button/ButtonCounter.tsx","Components/SettingCounter/SettingCounter.tsx","Components/Scoreboard/Scoreboard.tsx","Components/Counter/Counter.tsx","bll/counter-reducer.ts","App.tsx","reportWebVitals.ts","bll/store.ts","bll/utils/localstorage-utils.ts","index.tsx","Components/SettingCounter/SettingCounter.module.css"],"names":["module","exports","Input","props","type","className","error","value","onChange","style","width","ButtonCounter","Button","variant","color","size","margin","onClick","disabled","title","SettingCounter","errorStart","max","start","s","input","errorMax","containerCounter","scoreboard","textScoreboardSettings","textMax","textStart","inputContainer","onChangeMaxValue","onChangeStartValue","containerButton","setButton","isError","Scoreboard","textError","textSet","error1","count","maxValue","error2","display","Counter","button","incButton","resetButton","initialState","App","useSelector","state","counter","dispatch","useDispatch","e","onChangeMaxValueAC","onChangeStartValueAC","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Number","currentTarget","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f5cc5a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerCounter\":\"Counter_containerCounter__2appn\",\"scoreboard\":\"Counter_scoreboard__1HvI6\",\"containerButton\":\"Counter_containerButton__2260d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Scoreboard_error__22e0V\",\"textError\":\"Scoreboard_textError__3ms5I\",\"textSet\":\"Scoreboard_textSet__1qda6\"};","import React, {ChangeEvent} from 'react';\r\n\r\n\r\ntype InputsPropsType = {\r\n    value: number\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    error:string\r\n}\r\n\r\nexport function Input(props: InputsPropsType) {\r\n    return (\r\n        <>\r\n            <input type='number'\r\n                   className={props.error}\r\n                   value={props.value}\r\n                   onChange={props.onChange}\r\n                   style={{width: 90}}/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    disabled?: boolean\r\n    onClick: () => void\r\n}\r\n\r\n\r\nexport function ButtonCounter(props: ButtonPropsType) {\r\n    return (\r\n        <Button\r\n            variant='contained'\r\n            color ='primary'\r\n            size='large'\r\n            style={{margin:'10px'}}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n        >{props.title}</Button>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {Input} from '../Input/Input';\r\nimport {ButtonCounter} from '../Button/ButtonCounter';\r\nimport s from './SettingCounter.module.css'\r\n\r\ntype SettingCounterPropsType = {\r\n    isError:boolean\r\n    start: number\r\n    max: number\r\n    disabled: boolean\r\n    setButton:() =>void\r\n    onChangeStartValue: (e: ChangeEvent<HTMLInputElement>)=> void\r\n    onChangeMaxValue: (e: ChangeEvent<HTMLInputElement>)=> void\r\n}\r\n\r\n\r\n\r\nconst SettingCounter = (props:SettingCounterPropsType) => {\r\n    const errorStart = ( props.max < 0) || (props.start === props.max) ? s.error : s.input\r\n    const errorMax = (props.start < 0) || (props.start >= props.max) ? s.error : s.input\r\n\r\n    return (\r\n        <div className={s.containerCounter}>\r\n            <div className={s.scoreboard}>\r\n                <div className={s.textScoreboardSettings}>\r\n                    <div className={s.textMax}>Max.value:</div>\r\n                    <div className={s.textStart}>Start value:</div>\r\n                </div>\r\n                <div className={s.inputContainer}>\r\n                    <Input\r\n                        value={props.max}\r\n                        onChange={props.onChangeMaxValue}\r\n                        error={errorMax}\r\n                    />\r\n                    <Input\r\n                        value={props.start}\r\n                        onChange={props.onChangeStartValue}\r\n                        error={errorStart}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={s.containerButton}>\r\n\r\n                <ButtonCounter onClick={props.setButton} title=\"set\" disabled={props.disabled || props.isError}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettingCounter;","import React from 'react';\r\nimport s from './Scoreboard.module.css'\r\n\r\n\r\ntype ScoreboardType = {\r\n    count: number\r\n    maxValue: number\r\n    display: boolean\r\n    isError: boolean\r\n}\r\n\r\nexport const Scoreboard = (props: ScoreboardType) => {\r\n    const textError = <span className={s.textError}>Incorrect value!</span>\r\n    const textSet = <span className={s.textSet}>enter values and press \"set\"</span>\r\n\r\n    const error1 = props.count === props.maxValue ? s.error : ''\r\n    const error2 = (props.isError ? textError : textSet)\r\n\r\n    return (\r\n        <div className={error1}>\r\n            {\r\n                props.display ? error2 : props.count\r\n            }\r\n        </div>)\r\n}\r\n\r\n","import React from 'react';\r\nimport {Scoreboard} from '../Scoreboard/Scoreboard';\r\nimport {ButtonCounter} from '../Button/ButtonCounter';\r\nimport s from './Counter.module.css'\r\n\r\ntype CounterPropsType = {\r\n    count: number\r\n    start: number\r\n    max: number\r\n    display: boolean\r\n    isError:boolean\r\n    incButton: () => void\r\n    resetButton: () => void\r\n}\r\n\r\nconst Counter = (props:CounterPropsType) => {\r\n\r\n    return (\r\n        <div className={s.containerCounter}>\r\n            <div className={s.scoreboard}>\r\n\r\n                <Scoreboard\r\n                    count={props.count}\r\n                    maxValue={props.max}\r\n                    isError={props.isError}\r\n                    display={props.display}\r\n                />\r\n            </div>\r\n            <div className={s.containerButton}>\r\n                     <span className={s.button}>\r\n\r\n            <ButtonCounter onClick={props.incButton} title='inc' disabled={props.count === props.max || props.isError}/>\r\n            <ButtonCounter onClick={props.resetButton} title='reset'/>\r\n\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","import {ChangeEvent} from 'react';\r\n\r\nconst initialState = {\r\n    count: 0,\r\n    start: 8,\r\n    max: 10,\r\n    disabled: false,\r\n    display: true\r\n}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nexport const counterReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'INC-BUTTON':\r\n            return {\r\n                ...state, count: state.count + 1\r\n            }\r\n        case 'SET-BUTTON'  :\r\n            return {\r\n                ...state, count: state.start, disabled: true, display: false\r\n            }\r\n        case 'RESET-BUTTON': {\r\n            return {\r\n                ...state, count: state.start\r\n            }\r\n        }\r\n        case 'ON-CHANGE-START-VALUE': {\r\n            return {...state, display: true, disabled: false, start: Number(action.e.currentTarget.value)}\r\n        }\r\n        case 'ON-CHANGE-MAX-VALUE': {\r\n            return {...state, display: true, disabled: false, max: Number(action.e.currentTarget.value)}\r\n        }\r\n        case 'INC-VALUE=FROM-LOCAL-STORAGE':\r\n            return {\r\n                ...state, count: action.count\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const incButtonAC = () => ({type: 'INC-BUTTON'} as const)\r\nexport const setButtonAC = () => ({type: 'SET-BUTTON'} as const)\r\nexport const resetButtonAC = () => ({type: 'RESET-BUTTON'} as const)\r\nexport const onChangeStartValueAC = (e: ChangeEvent<HTMLInputElement>) => ({type: 'ON-CHANGE-START-VALUE', e} as const)\r\nexport const onChangeMaxValueAC = (e: ChangeEvent<HTMLInputElement>) => ({type: 'ON-CHANGE-MAX-VALUE', e} as const)\r\nexport const setValueFromLocalStorageAC = (count: number, max: number) => ({type: 'INC-VALUE=FROM-LOCAL-STORAGE', count, max} as const)\r\n\r\n\r\nexport type IncValueActionType = ReturnType<typeof incButtonAC>\r\nexport type SetButtonActionType = ReturnType<typeof setButtonAC>\r\nexport type ResetButtonActionType = ReturnType<typeof resetButtonAC>\r\nexport type OnChangeStartValueActionType = ReturnType<typeof onChangeStartValueAC>\r\nexport type OnChangeMaxValueActionType = ReturnType<typeof onChangeMaxValueAC>\r\nexport type SetValueFromLocalStorageActionType = ReturnType<typeof setValueFromLocalStorageAC>\r\n\r\ntype ActionType =\r\n    IncValueActionType\r\n    | SetValueFromLocalStorageActionType\r\n    | OnChangeStartValueActionType\r\n    | OnChangeMaxValueActionType\r\n    | SetButtonActionType\r\n    | ResetButtonActionType","import React, {ChangeEvent} from 'react';\r\nimport './App.css';\r\nimport SettingCounter from './Components/SettingCounter/SettingCounter';\r\nimport Counter from './Components/Counter/Counter';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from './bll/store';\r\nimport {incButtonAC, onChangeMaxValueAC, onChangeStartValueAC, resetButtonAC, setButtonAC} from './bll/counter-reducer';\r\n\r\nfunction App() {\r\n\r\n    const count = useSelector<AppStateType, number>(state => state.counter.count)\r\n    const start = useSelector<AppStateType, number>(state => state.counter.start)\r\n    const max = useSelector<AppStateType, number>(state => state.counter.max)\r\n    const disabled = useSelector<AppStateType, boolean>(state => state.counter.disabled)\r\n    const display = useSelector<AppStateType, boolean>(state => state.counter.display)\r\n    const dispatch = useDispatch()\r\n\r\n    const isError = max < 0 || start >= max || start < 0\r\n\r\n    const setButton = () => {dispatch(setButtonAC())}\r\n    const incButton = () => dispatch(incButtonAC())\r\n    const resetButton = () => {dispatch(resetButtonAC())}\r\n    const onChangeStartValue = (e: ChangeEvent<HTMLInputElement>) => {dispatch(onChangeStartValueAC(e))}\r\n    const onChangeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {dispatch(onChangeMaxValueAC(e))}\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <SettingCounter\r\n                max={max} start={start} disabled={disabled}\r\n                onChangeMaxValue={onChangeMaxValue}\r\n                onChangeStartValue={onChangeStartValue}\r\n                setButton={setButton} isError={isError}/>\r\n            <Counter\r\n                count={count} start={start} max={max}\r\n                isError={isError} display={display}\r\n                incButton={incButton} resetButton={resetButton}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\r\nimport {counterReducer} from './counter-reducer';\r\nimport {loadState, saveState} from './utils/localstorage-utils';\r\n\r\nconst rootReducer = combineReducers({\r\n    counter:counterReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer,loadState())\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        counter: store.getState().counter\r\n    });\r\n});\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppStoreType = typeof store","import {AppStateType} from '../store';\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('app-state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state: AppStateType) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('app-state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './bll/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerCounter\":\"SettingCounter_containerCounter__2ZESr\",\"scoreboard\":\"SettingCounter_scoreboard__3xuO4\",\"inputContainer\":\"SettingCounter_inputContainer__2rrr_\",\"textScoreboardSettings\":\"SettingCounter_textScoreboardSettings__oQI46\",\"textMax\":\"SettingCounter_textMax__1bYqa\",\"textStart\":\"SettingCounter_textStart__2XutW\",\"containerButton\":\"SettingCounter_containerButton__2FDMR\"};"],"sourceRoot":""}